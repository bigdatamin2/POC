# -*- coding: utf-8 -*-
"""PhalangesOutlinesCorrect_MakeData.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1iVf63Fb7MlyuOrGRaE_Gabhzt-FvKfDq
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from scipy.spatial.distance import euclidean
from sklearn.model_selection import train_test_split
from sklearn.neighbors import KNeighborsClassifier
from sklearn.metrics import accuracy_score, classification_report, recall_score
from urllib.request import urlopen
from io import StringIO
from google.colab import drive
import random
from imblearn.metrics import specificity_score

# 1. Google Drive 마운트 및 데이터 파일 경로 설정
drive.mount('/content/drive')
train_file_path = '/content/drive/MyDrive/PhalangesOutlinesCorrect/PhalangesOutlinesCorrect_TRAIN.txt'
test_file_path = '/content/drive/MyDrive/PhalangesOutlinesCorrect/PhalangesOutlinesCorrect_TEST.txt'

# 2. 데이터 로드 함수 정의 (공백 제거 및 정리 추가)
def load_ucr(filename):
    with open(filename, 'r') as f:
        lines = f.readlines()

    cleaned_data = []
    for line in lines:
        cleaned_line = line.strip().split()  # 공백 제거 후 리스트로 변환
        cleaned_data.append([float(value) for value in cleaned_line])

    data = np.array(cleaned_data)
    X = data[:, 1:]
    y = data[:, 0]
    y = np.where(y == min(y), 0, 1)  # 이진 클래스 변환 (0, 1)
    return X, y

# 데이터 로드
X_train, y_train = load_ucr(train_file_path)
X_test, y_test = load_ucr(test_file_path)

print(X_train.shape)
print(y_train.shape)
print(X_test.shape)
print(y_test.shape)

# 3. 데이터 샘플링 (10% 랜덤 추출)
def sample_data(X, y, sample_ratio):
    sample_size = int(len(X) * sample_ratio)
    indices = np.random.choice(len(X), sample_size, replace=False)
    return X[indices], y[indices]

X_tr_0 = X_train[y_train == 0]
y_tr_0 = y_train[y_train == 0]
X_tr_1 = X_train[y_train == 1]
y_tr_1 = y_train[y_train == 1]

X_tr_1_sample, y_tr_1_sample = sample_data(X_tr_1, y_tr_1, 0.1)
X_tr_0_sample, y_tr_0_sample = sample_data(X_tr_0, y_tr_0, 0.01)
X_test_sample, y_test_sample = sample_data(X_test, y_test, 0.1)

print(X_tr_1.shape)
print(y_tr_1.shape)
print(X_tr_0.shape)
print(y_tr_0.shape)

print(X_tr_1_sample.shape)
print(y_tr_1_sample.shape)
print(X_tr_0_sample.shape)
print(y_tr_0_sample.shape)
print(X_test_sample.shape)
print(y_test_sample.shape)

X_train_sample = np.concatenate((X_tr_1_sample, X_tr_0_sample))
y_train_sample = np.concatenate((y_tr_1_sample, y_tr_0_sample))

print(X_train_sample.shape)
print(y_train_sample.shape)
print(X_test_sample.shape)
print(y_test_sample.shape)

pd.DataFrame(X_train_sample).to_csv('/content/drive/MyDrive/PhalangesOutlinesCorrect/X_train_sample.csv', index=False)
pd.DataFrame(y_train_sample).to_csv('/content/drive/MyDrive/PhalangesOutlinesCorrect/y_train_sample.csv', index=False)
pd.DataFrame(X_test_sample).to_csv('/content/drive/MyDrive/PhalangesOutlinesCorrect/X_test_sample.csv', index=False)
pd.DataFrame(y_test_sample).to_csv('/content/drive/MyDrive/PhalangesOutlinesCorrect/y_test_sample.csv', index=False)